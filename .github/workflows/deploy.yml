# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CompanionNuri API Server CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Initiate & Build jar
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
 
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
      
    - name: Build with Maven
      run: mvn -B package --file ./WebProject/pom.xml
      
  deploy:
    name: Deploy by Docker & AWS EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Docker build & push
      if: contains(github.ref, 'master')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          cd ~
          docker build -t ${{ secrets.DOCKER_REPO }}/companionnuri:latest .
          docker push ${{ secrets.DOCKER_REPO }}/companionnuri:latest
          
    - name: Docker pull & run in AWS EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        password: ${{ secrets.AWS_PASSWORD }}
        script: |
          sh deploy.sh
  
