# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CompanionNuri API Server CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  initiate_deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
        
    # Caching dependencies
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
  build-java:
    runs-on: ubuntu-latest
    steps:
    
    ## maven build 
    - name: Build with Maven
      run: mvn -B package --file ./WebProject/pom.xml
      
  build-docker:
    runs-on: ubuntu-latest
    steps:
    ## docker build & push
    - name: Docker build & push
      if: contains(github.ref, 'master')
      run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/companionnuri:latest ./WebProject
          docker push ${{ secrets.DOCKER_REPO }}/companionnuri:latest
          
  deploy-aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker pull & run in AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USERNAME }}
          password: ${{ secrets.AWS_PASSWORD }}
          script: |
            sh deploy.sh
  
